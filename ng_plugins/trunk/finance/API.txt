//
// API - набор функций, предоставл€емых данным плагином
//

1. finance_check_money($userlogin, $balance_no = -1) 
   :: проверка баланса пользовател€ (в единицах валюты)
   $userlogin  - login пользовател€ чей баланс провер€ть
   $balance_no - номер баланса дл€ проверки (0 - основной баланс, -1 - считать 
                 общую сумму со всех монетарных балансов)
   –езультат: ¬озвращает сумму на счету пользовател€.


2. finance_check_enough_money($userlogin, $type, $tprice, $price)
   :: ѕроверка доступности у пользовател€ средств дл€ определЄнного типа действий
   $userlogin   - логин пользовател€
   $type	- тип действи€
   $tprice	- цена в "единицах" при наличии баланса по данному типу
   $price	- цена в валюте
   –езультат: ¬озвращает 0 если денег недостаточно и 1 в противном случае


3. finance_get_balance_type($balance_no)
   :: ѕолучить тип баланса
   $balance_no	- Ќомер баланса
   –езультат: ѕуста€ строка в случае монетарного баланса и текст-тип если баланс
              немонетарный


4. finance_pay($identity, $payment)
   :: —н€тие суммы с баланса пользовател€
   $identity - массив идентифицирующий пользовател€. «аполн€етс€ один из параметров
  	# 'id'	- ID пользовател€
  	# 'login'	- Login пользовател€
   $payment - массив с параметрами платежа
    # 'type' - тип проводимого платежа:
  	'money'  -	_только_ валютный
  	'points' -	_только_ в поинтах
  	'auto'   -	[default] сначала пытаемс€ списать в поинтах, если их недостаточно -
  					 списываем средства в валюте
    # 'ptype' - тип поинтов дл€ оплаты (в случае авто оплаты или оплаты по поинтам)
    # 'value' - массив с параметрами платежа
  	'money'  =	сумма платежа в валюте
  	'points' =	массив (тип поинтов,кол-во поинтов) при списании в поинтах
    # 'description' - описание платежа [ дл€ помещени€ в таблицу finance_history ]
  

   –езультат: 0 в случае неуспеха, 1 в случае успеха



